name: Run Python Tests and Build Image

on:
  push:
    branches:
      - issue/15-Dockerize
      - develop
      - master

env:
  REQUIREMENTS: requirements.txt

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coveralls
      - name: Setup Repo
        run: |
          cp .env.template .env
      - name: Run flake8
        run: flake8
      - name: Run black
        run: black --check .
      - name: Lint markdown files
        uses: bewuethr/mdl-action@v1
      
      - name: Load dotenv
        uses: falti/dotenv-action@v0.2.5
      
      - name: Environment Variables from Dotenv
        uses: c-py/action-dotenv-to-setenv@v3

      - name: Run unittests
        run: coverage run -m unittest discover


      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: REQUIREMENTS=${{ env.REQUIREMENTS }}



